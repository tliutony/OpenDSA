{
  "translations" :{
    "en": {
      "sc1": "A more efficient implementation can be obtained by relaxing the requirement that all elements of the queue must be in the first $n$ positions of the array. We still require that the queue be stored in contiguous array positions, but the contents of the queue will be permitted to drift within the array.",
      "sc2": " The queue after the initial four numbers 20, 5, 12, and 17 have been inserted.",
      "sc3": "<code>dequeue</code> the value 20. Increase the <code>first</code> index by 1.",
      "sc4": "<code>dequeue</code> the value 5. Increase the <code>first</code> index by 1.",
      "sc5": "<code>dequeue</code> the value 12. Increase the <code>first</code> index by 1.",
      "sc6": "<code>enqueue</code> the value 3. Increase the <code>last</code> index by 1.",
      "sc7": "<code>enqueue</code> the value 30. Increase the <code>last</code> index by 1.",
      "sc8": "<code>enqueue</code> the value 4. Increase the <code>last</code> index by 1.",
      "sc9": "Now, both the enqueue and the dequeue operations can be performed in $O(1)$ time because no other elements in the queue need be moved."
    }
  }
}
