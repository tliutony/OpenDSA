{
  "translations": {
    "en": {
      "sc1": "Now for the <code>dequeue</code> operation.",
      "sc2": "First we check that the queue is not empty, and throw a <code>NoSuchElementException</code> if it is.",
      "sc3": "Again, we can rely on the linked list operations to do the work. Here, we use the <code>removeFirst()</code> method to remove the item at the front of the queue, which also updates the <code>head</code> pointer.",
      "sc4": "Return the value removed by <code>removeFirst()</code>, which is the dequeued value."
    }
  },
  "code": {
    "java": [{
      "url": "../../../SourceCode/Java/Lists/LQueue.java",
      "lineNumbers": false,
      "startAfter": "/* *** ODSATag: LQueueDequeue *** */",
      "endBefore": "/* *** ODSAendTag: LQueueDequeue *** */",
      "tags": {
        "sig": 2,
        "empty": 3,
        "copy": 4,
        "setNext": 5,
        "endcheck": 6,
        "return": 7
      }
    }],
    "java_generic": [{
      "url": "../../../SourceCode/Java_Generic/MHC/LinkedListQueue.java",
      "lineNumbers": false,
      "startAfter": "/* *** ODSATag: dequeue *** */",
      "endBefore": "/* *** ODSAendTag: dequeue *** */",
      "tags": {
        "sig": 1,
        "empty": 2,
        "removeFirst": 6
      }
    }]
  }
}
